/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.Conexion;
import modelo.CuerpoDeAgua;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.ArrayList;
import modelo.DensidadPoblacional;

/**
 *
 * @author Jairo
 */
public class Aplicativo_IRCA extends javax.swing.JFrame {

    private int ContarRegistros;

    /**
     * Creates new form Aplicativo_IRCA
     */
    public Aplicativo_IRCA() {
        initComponents();
        listadoDP();
        Lbl_Resultados.setVisible(false);
        Lbl_NombreEE.setVisible(false);
        Lbl_IDEE.setVisible(false);
        Lbl_MunicipioEE.setVisible(false);
        Lbl_TipoCuerpoEE.setVisible(false);
        Lbl_TipoAguaEE.setVisible(false);
        Lbl_IRCAEE.setVisible(false);
        Btn_Editar.setVisible(false);
        Btn_Eliminar.setVisible(false);
        Btn_Cancelar.setVisible(false);
        Txt_NombreEE.setVisible(false);
        Txt_IDEE.setVisible(false);
        Txt_MunicipioEE.setVisible(false);
        Txt_TipoCuerpoEE.setVisible(false);
        Txt_TipoAguaEE.setVisible(false);
        Txt_IRCAEE.setVisible(false);
        
        //hacemos invisible por defecto lo del menu densidad en registro
        Lbl_Msg.setVisible(false);
        Lbl_HabitantesDP.setVisible(false);
        Lbl_IDDP.setVisible(false);
        Btn_EditarDP.setVisible(false);
        Btn_RegistrarDP.setVisible(false);
        Btn_CancelarDP.setVisible(false);
        Txt_HabitantesDP.setVisible(false);
        Txt_IDDP.setVisible(false);
        
        // hacemos invisible por defecto lo del menu densidad en afectacion
        
        Txta_AfectacionDP.setVisible(false);
        
        Lbl_AfectacionPorIDDP.setVisible(false);
        Lbl_registroPorIDDP.setVisible(false);
        Btn_CalcularPorIDDP.setVisible(false);
        Lbl_IDPorIDDP.setVisible(false);
        Txt_IDPorIDDP.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TP_Principal = new javax.swing.JTabbedPane();
        Panel_Ingresar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Btn_Guardar = new javax.swing.JButton();
        Txt_Nombre = new javax.swing.JTextField();
        Txt_ID = new javax.swing.JTextField();
        Txt_Municipio = new javax.swing.JTextField();
        Txt_TipoCuerpo = new javax.swing.JTextField();
        Txt_IRCA = new javax.swing.JTextField();
        Txt_TipoAgua = new javax.swing.JTextField();
        Panel_Procesar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Txta_Procesar = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Txta_Obtener = new javax.swing.JTextArea();
        Btn_Obtener = new javax.swing.JButton();
        Btn_Procesar = new javax.swing.JButton();
        Btn_Limpiar = new javax.swing.JButton();
        Panel_EE = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        Lbl_Resultados = new javax.swing.JLabel();
        Lbl_NombreEE = new javax.swing.JLabel();
        Txt_NombreEE = new javax.swing.JTextField();
        Lbl_IDEE = new javax.swing.JLabel();
        Txt_IDEE = new javax.swing.JTextField();
        Lbl_MunicipioEE = new javax.swing.JLabel();
        Txt_MunicipioEE = new javax.swing.JTextField();
        Txt_IRCAEE = new javax.swing.JTextField();
        Lbl_IRCAEE = new javax.swing.JLabel();
        Txt_TipoAguaEE = new javax.swing.JTextField();
        Lbl_TipoAguaEE = new javax.swing.JLabel();
        Txt_TipoCuerpoEE = new javax.swing.JTextField();
        Lbl_TipoCuerpoEE = new javax.swing.JLabel();
        Txt_Buscar = new javax.swing.JTextField();
        Btn_BuscarEE = new javax.swing.JButton();
        Btn_Editar = new javax.swing.JButton();
        Btn_Eliminar = new javax.swing.JButton();
        Btn_Cancelar = new javax.swing.JButton();
        Panel_DP = new javax.swing.JPanel();
        TP_DP = new javax.swing.JTabbedPane();
        Panel_PRegistro = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        Txt_BuscarDP = new javax.swing.JTextField();
        Btn_BuscarDP = new javax.swing.JButton();
        Txt_IDDP = new javax.swing.JTextField();
        Lbl_IDDP = new javax.swing.JLabel();
        Lbl_Msg = new javax.swing.JLabel();
        Lbl_HabitantesDP = new javax.swing.JLabel();
        Txt_HabitantesDP = new javax.swing.JTextField();
        Btn_RegistrarDP = new javax.swing.JButton();
        Btn_EditarDP = new javax.swing.JButton();
        Btn_CancelarDP = new javax.swing.JButton();
        Panel_PAfectacion = new javax.swing.JPanel();
        Btn_GeneralDP = new javax.swing.JButton();
        Btn_PorIDDP = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Txta_AfectacionDP = new javax.swing.JTextArea();
        Txt_IDPorIDDP = new javax.swing.JTextField();
        Btn_CalcularPorIDDP = new javax.swing.JButton();
        Lbl_registroPorIDDP = new javax.swing.JLabel();
        Lbl_AfectacionPorIDDP = new javax.swing.JLabel();
        Lbl_IDPorIDDP = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Txta_ListaRegistrosDP = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/IRCA.png"))); // NOI18N

        Panel_Ingresar.setBackground(new java.awt.Color(153, 255, 153));

        jLabel2.setText("Nombre");

        jLabel3.setText("ID");

        jLabel4.setText("Municipio");

        jLabel5.setText("Tipo de cuerpo de agua");

        jLabel6.setText("Tipo de agua");

        jLabel7.setText("IRCA");

        Btn_Guardar.setBackground(new java.awt.Color(0, 204, 0));
        Btn_Guardar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Btn_Guardar.setForeground(new java.awt.Color(255, 255, 255));
        Btn_Guardar.setText("Ingresar");
        Btn_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_GuardarActionPerformed(evt);
            }
        });

        Txt_Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_NombreActionPerformed(evt);
            }
        });

        Txt_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_IDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_IngresarLayout = new javax.swing.GroupLayout(Panel_Ingresar);
        Panel_Ingresar.setLayout(Panel_IngresarLayout);
        Panel_IngresarLayout.setHorizontalGroup(
            Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_IngresarLayout.createSequentialGroup()
                .addGroup(Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_IngresarLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(Txt_TipoCuerpo)
                            .addComponent(Txt_Nombre))
                        .addGap(160, 160, 160)
                        .addGroup(Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Txt_ID)
                            .addComponent(Txt_TipoAgua, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                        .addGap(158, 158, 158)
                        .addGroup(Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Txt_Municipio)
                            .addComponent(Txt_IRCA, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)))
                    .addGroup(Panel_IngresarLayout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(Btn_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        Panel_IngresarLayout.setVerticalGroup(
            Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_IngresarLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Municipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(Panel_IngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_TipoCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_TipoAgua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_IRCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88)
                .addComponent(Btn_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        TP_Principal.addTab("Ingresar", Panel_Ingresar);

        Panel_Procesar.setBackground(new java.awt.Color(204, 255, 255));

        Txta_Procesar.setEditable(false);
        Txta_Procesar.setBackground(new java.awt.Color(204, 255, 255));
        Txta_Procesar.setColumns(20);
        Txta_Procesar.setRows(5);
        jScrollPane1.setViewportView(Txta_Procesar);

        Txta_Obtener.setEditable(false);
        Txta_Obtener.setBackground(new java.awt.Color(204, 255, 255));
        Txta_Obtener.setColumns(20);
        Txta_Obtener.setRows(5);
        jScrollPane2.setViewportView(Txta_Obtener);

        Btn_Obtener.setFont(new java.awt.Font("Segoe UI Historic", 0, 24)); // NOI18N
        Btn_Obtener.setForeground(new java.awt.Color(0, 102, 0));
        Btn_Obtener.setText("Obtener");
        Btn_Obtener.setMaximumSize(new java.awt.Dimension(120, 38));
        Btn_Obtener.setMinimumSize(new java.awt.Dimension(120, 38));
        Btn_Obtener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ObtenerActionPerformed(evt);
            }
        });

        Btn_Procesar.setFont(new java.awt.Font("Segoe UI Historic", 0, 24)); // NOI18N
        Btn_Procesar.setForeground(new java.awt.Color(0, 153, 204));
        Btn_Procesar.setText("Procesar");
        Btn_Procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ProcesarActionPerformed(evt);
            }
        });

        Btn_Limpiar.setFont(new java.awt.Font("Segoe UI Historic", 0, 24)); // NOI18N
        Btn_Limpiar.setForeground(new java.awt.Color(102, 102, 102));
        Btn_Limpiar.setText("Limpiar");
        Btn_Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_LimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_ProcesarLayout = new javax.swing.GroupLayout(Panel_Procesar);
        Panel_Procesar.setLayout(Panel_ProcesarLayout);
        Panel_ProcesarLayout.setHorizontalGroup(
            Panel_ProcesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_ProcesarLayout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(Btn_Obtener, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Btn_Procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_ProcesarLayout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(Panel_ProcesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_ProcesarLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_ProcesarLayout.createSequentialGroup()
                        .addComponent(Btn_Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(337, 337, 337))))
        );
        Panel_ProcesarLayout.setVerticalGroup(
            Panel_ProcesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_ProcesarLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(Panel_ProcesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Btn_Obtener, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(Btn_Procesar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(Panel_ProcesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(Btn_Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        TP_Principal.addTab("Procesar", Panel_Procesar);

        Panel_EE.setBackground(new java.awt.Color(204, 204, 255));

        jLabel8.setText("ID:");

        Lbl_Resultados.setText("Resaultados de la busqueda");

        Lbl_NombreEE.setText("Nombre");

        Txt_NombreEE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_NombreEEActionPerformed(evt);
            }
        });

        Lbl_IDEE.setText("ID");

        Txt_IDEE.setEditable(false);

        Lbl_MunicipioEE.setText("Municipio");

        Lbl_IRCAEE.setText("IRCA");

        Lbl_TipoAguaEE.setText("Tipo de agua");

        Lbl_TipoCuerpoEE.setText("Tipo de cuerpo de agua");

        Btn_BuscarEE.setText("Buscar");
        Btn_BuscarEE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarEEActionPerformed(evt);
            }
        });

        Btn_Editar.setBackground(new java.awt.Color(0, 102, 255));
        Btn_Editar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Btn_Editar.setForeground(new java.awt.Color(255, 255, 255));
        Btn_Editar.setText("Editar");
        Btn_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_EditarActionPerformed(evt);
            }
        });

        Btn_Eliminar.setBackground(new java.awt.Color(255, 0, 0));
        Btn_Eliminar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Btn_Eliminar.setForeground(new java.awt.Color(255, 255, 255));
        Btn_Eliminar.setText("Eliminar");
        Btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_EliminarActionPerformed(evt);
            }
        });

        Btn_Cancelar.setBackground(new java.awt.Color(102, 102, 102));
        Btn_Cancelar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Btn_Cancelar.setForeground(new java.awt.Color(255, 255, 255));
        Btn_Cancelar.setText("Cancelar");
        Btn_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_EELayout = new javax.swing.GroupLayout(Panel_EE);
        Panel_EE.setLayout(Panel_EELayout);
        Panel_EELayout.setHorizontalGroup(
            Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_EELayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Lbl_Resultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(Panel_EELayout.createSequentialGroup()
                            .addGap(226, 226, 226)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Txt_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(Btn_BuscarEE))
                        .addGroup(Panel_EELayout.createSequentialGroup()
                            .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(Panel_EELayout.createSequentialGroup()
                                    .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Lbl_NombreEE, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Lbl_TipoCuerpoEE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Txt_TipoCuerpoEE)
                                        .addComponent(Txt_NombreEE, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(160, 160, 160)
                                    .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Lbl_TipoAguaEE, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Lbl_IDEE, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Txt_IDEE)
                                        .addComponent(Txt_TipoAguaEE, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(Panel_EELayout.createSequentialGroup()
                                    .addGap(36, 36, 36)
                                    .addComponent(Btn_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(Btn_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(Panel_EELayout.createSequentialGroup()
                                    .addGap(120, 120, 120)
                                    .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Lbl_IRCAEE, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Lbl_MunicipioEE, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Txt_MunicipioEE)
                                        .addComponent(Txt_IRCAEE, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(Panel_EELayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(Btn_Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        Panel_EELayout.setVerticalGroup(
            Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_EELayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Txt_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_BuscarEE))
                .addGap(54, 54, 54)
                .addComponent(Lbl_Resultados)
                .addGap(18, 18, 18)
                .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lbl_NombreEE)
                    .addComponent(Lbl_IDEE)
                    .addComponent(Lbl_MunicipioEE))
                .addGap(18, 18, 18)
                .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_NombreEE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_IDEE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_MunicipioEE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lbl_TipoCuerpoEE)
                    .addComponent(Lbl_IRCAEE)
                    .addComponent(Lbl_TipoAguaEE))
                .addGap(18, 18, 18)
                .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_TipoCuerpoEE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_TipoAguaEE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_IRCAEE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(Panel_EELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        TP_Principal.addTab("Editar / Eliminar", Panel_EE);

        Panel_DP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Panel_DPFocusGained(evt);
            }
        });

        TP_DP.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabel10.setText("ID del cuerpo de agua al que se le van a registrar o editar la cantidad de habitantes");

        Txt_BuscarDP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Txt_BuscarDPFocusGained(evt);
            }
        });
        Txt_BuscarDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_BuscarDPActionPerformed(evt);
            }
        });

        Btn_BuscarDP.setText("Buscar ");
        Btn_BuscarDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_BuscarDPActionPerformed(evt);
            }
        });

        Txt_IDDP.setEditable(false);

        Lbl_IDDP.setText("Id cuerpo de agua");

        Lbl_Msg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Lbl_HabitantesDP.setText("Cantidad de habitantes");

        Btn_RegistrarDP.setBackground(new java.awt.Color(0, 204, 0));
        Btn_RegistrarDP.setFont(new java.awt.Font("Segoe UI Historic", 0, 24)); // NOI18N
        Btn_RegistrarDP.setForeground(new java.awt.Color(255, 255, 255));
        Btn_RegistrarDP.setText("Registrar");
        Btn_RegistrarDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegistrarDPActionPerformed(evt);
            }
        });

        Btn_EditarDP.setBackground(new java.awt.Color(0, 102, 255));
        Btn_EditarDP.setFont(new java.awt.Font("Segoe UI Historic", 0, 24)); // NOI18N
        Btn_EditarDP.setForeground(new java.awt.Color(255, 255, 255));
        Btn_EditarDP.setText("Editar");
        Btn_EditarDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_EditarDPActionPerformed(evt);
            }
        });

        Btn_CancelarDP.setBackground(new java.awt.Color(102, 102, 102));
        Btn_CancelarDP.setFont(new java.awt.Font("Segoe UI Historic", 0, 24)); // NOI18N
        Btn_CancelarDP.setForeground(new java.awt.Color(255, 255, 255));
        Btn_CancelarDP.setText("Cancelar");
        Btn_CancelarDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CancelarDPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_PRegistroLayout = new javax.swing.GroupLayout(Panel_PRegistro);
        Panel_PRegistro.setLayout(Panel_PRegistroLayout);
        Panel_PRegistroLayout.setHorizontalGroup(
            Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_PRegistroLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Panel_PRegistroLayout.createSequentialGroup()
                                .addComponent(Txt_BuscarDP, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(Btn_BuscarDP)))
                        .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_PRegistroLayout.createSequentialGroup()
                                .addComponent(Txt_IDDP, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(317, 317, 317))
                            .addGroup(Panel_PRegistroLayout.createSequentialGroup()
                                .addComponent(Lbl_IDDP)
                                .addGap(52, 52, 52))))
                    .addGroup(Panel_PRegistroLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel_PRegistroLayout.createSequentialGroup()
                                .addComponent(Btn_RegistrarDP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Btn_EditarDP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Btn_CancelarDP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Lbl_HabitantesDP, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Lbl_Msg, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Txt_HabitantesDP, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel_PRegistroLayout.setVerticalGroup(
            Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_PRegistroLayout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_BuscarDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_BuscarDP))
                .addGap(62, 62, 62)
                .addComponent(Lbl_Msg, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lbl_IDDP)
                    .addComponent(Lbl_HabitantesDP))
                .addGap(18, 18, 18)
                .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_IDDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_HabitantesDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(Panel_PRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_EditarDP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_RegistrarDP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_CancelarDP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(144, 144, 144))
        );

        TP_DP.addTab("<html>\n<p>Registrar</p>\n<p>población</p>\n</html>", Panel_PRegistro);

        Btn_GeneralDP.setText("General");
        Btn_GeneralDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_GeneralDPActionPerformed(evt);
            }
        });

        Btn_PorIDDP.setText("Por ID");
        Btn_PorIDDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_PorIDDPActionPerformed(evt);
            }
        });

        Txta_AfectacionDP.setEditable(false);
        Txta_AfectacionDP.setColumns(20);
        Txta_AfectacionDP.setLineWrap(true);
        Txta_AfectacionDP.setRows(5);
        Txta_AfectacionDP.setBorder(null);
        jScrollPane4.setViewportView(Txta_AfectacionDP);

        Txt_IDPorIDDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_IDPorIDDPActionPerformed(evt);
            }
        });

        Btn_CalcularPorIDDP.setBackground(new java.awt.Color(255, 153, 0));
        Btn_CalcularPorIDDP.setText("Calcular");
        Btn_CalcularPorIDDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CalcularPorIDDPActionPerformed(evt);
            }
        });

        Lbl_IDPorIDDP.setText("ID");

        javax.swing.GroupLayout Panel_PAfectacionLayout = new javax.swing.GroupLayout(Panel_PAfectacion);
        Panel_PAfectacion.setLayout(Panel_PAfectacionLayout);
        Panel_PAfectacionLayout.setHorizontalGroup(
            Panel_PAfectacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_PAfectacionLayout.createSequentialGroup()
                .addGroup(Panel_PAfectacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_PAfectacionLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(Btn_GeneralDP, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(Btn_PorIDDP, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_PAfectacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(Panel_PAfectacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(Panel_PAfectacionLayout.createSequentialGroup()
                                .addComponent(Txt_IDPorIDDP, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(Btn_CalcularPorIDDP))
                            .addComponent(Lbl_registroPorIDDP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Lbl_AfectacionPorIDDP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Lbl_IDPorIDDP, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        Panel_PAfectacionLayout.setVerticalGroup(
            Panel_PAfectacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_PAfectacionLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(Panel_PAfectacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_GeneralDP, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_PorIDDP, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_PAfectacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(Panel_PAfectacionLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(Lbl_IDPorIDDP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Panel_PAfectacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Btn_CalcularPorIDDP)
                            .addComponent(Txt_IDPorIDDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(Lbl_registroPorIDDP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Lbl_AfectacionPorIDDP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 195, Short.MAX_VALUE)))
                .addContainerGap())
        );

        TP_DP.addTab("Afectación", Panel_PAfectacion);

        Txta_ListaRegistrosDP.setEditable(false);
        Txta_ListaRegistrosDP.setColumns(20);
        Txta_ListaRegistrosDP.setRows(5);
        Txta_ListaRegistrosDP.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                Txta_ListaRegistrosDPComponentAdded(evt);
            }
        });
        jScrollPane3.setViewportView(Txta_ListaRegistrosDP);

        jLabel9.setText("ID - municipio, nombre");

        javax.swing.GroupLayout Panel_DPLayout = new javax.swing.GroupLayout(Panel_DP);
        Panel_DP.setLayout(Panel_DPLayout);
        Panel_DPLayout.setHorizontalGroup(
            Panel_DPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_DPLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(Panel_DPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TP_DP)
                .addContainerGap())
        );
        Panel_DPLayout.setVerticalGroup(
            Panel_DPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_DPLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(Panel_DPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_DPLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TP_DP, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        TP_Principal.addTab("Densidad poblacional", Panel_DP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TP_Principal)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TP_Principal, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TP_Principal.getAccessibleContext().setAccessibleName("TPPrincipal");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Txt_NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_NombreActionPerformed

    private void Txt_NombreEEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_NombreEEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_NombreEEActionPerformed

    private void Btn_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_GuardarActionPerformed
        // TODO add your handling code here:
        String numerico_id= Txt_ID.getText();
        String numerico_IRCA=Txt_IRCA.getText();
        String nombre=Txt_Nombre.getText();
        String municipio=Txt_Municipio.getText();
        String tipoC=Txt_TipoCuerpo.getText();
        String tipoA=Txt_TipoAgua.getText();
        
        
        if(numerico_id.equals(" ")||numerico_id.isEmpty()||numerico_IRCA.equals(" ")
                ||numerico_IRCA.isEmpty()||nombre.equals(" ")||nombre.isEmpty()||
                municipio.equals(" ")||municipio.isEmpty()||tipoC.equals(" ")||
                tipoC.isEmpty()||tipoA.equals(" ")||tipoA.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se permiten campos vacios.");
            
        } else {
            try {
                Double.parseDouble(numerico_id);

            } catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this,"No puede continuar hasta no"+
                        " ingresar un id que sea valido");
            }

            try {
                Double.parseDouble(numerico_IRCA);

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,"No puede continuar hasta no"+
                        " ingresar un IRCA que sea valido");
            }
            
            
            CuerpoDeAgua cuerpoAgua=new CuerpoDeAgua();
            
            
            cuerpoAgua.setParaArreglo(Txt_Nombre.getText());
            String A_Nombre=cuerpoAgua.arreglo();
            cuerpoAgua.setNombreCuerpoDeAgua(A_Nombre);
            
            cuerpoAgua.setParaArreglo(Txt_ID.getText());
            String A_ID=cuerpoAgua.arreglo();
            cuerpoAgua.setIdCuerpoDeAgua(Integer.parseInt(A_ID));
            
            cuerpoAgua.setParaArreglo(Txt_Municipio.getText());
            String A_Municipio=cuerpoAgua.arreglo();
            cuerpoAgua.setMunicipio(A_Municipio);
            
            cuerpoAgua.setParaArreglo(Txt_TipoCuerpo.getText());
            String TipoCuerpo=cuerpoAgua.arreglo();
            cuerpoAgua.setTipoCuerpoDeAgua(TipoCuerpo);
            
            cuerpoAgua.setParaArreglo(Txt_TipoAgua.getText());
            String TipoAgua=cuerpoAgua.arreglo();
            cuerpoAgua.setTipoDeAgua(TipoAgua);
            
            cuerpoAgua.setParaArreglo(Txt_IRCA.getText());
            String IRCA=cuerpoAgua.arreglo();
            cuerpoAgua.setIRCA(Double.parseDouble(IRCA));

            Connection con= Conexion.Conectar();

            //insertar a la base de datos
            String sql="INSERT INTO cuerpos_de_agua (nombre, id, municipio, tipo_cuerpo, tipo_agua, irca) VALUES "
                    + "(?, ?, ?, ?, ?, ?)";
            try {
                PreparedStatement ps=con.prepareStatement(sql);
                ps.setString(1, cuerpoAgua.getNombreCuerpoDeAgua());
                ps.setInt(2, cuerpoAgua.getIdCuerpoDeAgua());
                ps.setString(3, cuerpoAgua.getMunicipio());
                ps.setString(4, cuerpoAgua.getTipoCuerpoDeAgua());
                ps.setString(5, cuerpoAgua.getTipoDeAgua());
                ps.setDouble(6, cuerpoAgua.getIRCA());

                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Cuerpo de agua guardado.");

                Txt_Nombre.setText("");
                Txt_ID.setText("");
                Txt_Municipio.setText("");
                Txt_TipoCuerpo.setText("");
                Txt_TipoAgua.setText("");
                Txt_IRCA.setText("");
                listadoDP();


            } catch (SQLException e) {
                System.out.println(e.getMessage());
                if(e.getMessage().equals("[SQLITE_CONSTRAINT_PRIMARYKEY]  A PRIMARY KEY constraint failed (UNIQUE constraint failed: cuerpos_de_agua.id)")){
                    JOptionPane.showMessageDialog(this, "La id que intenta registrar ya existe en la base de datos");
                }
            }

            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_Btn_GuardarActionPerformed

    private void Btn_BuscarEEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarEEActionPerformed
        // TODO add your handling code here:
        String buscar=Txt_Buscar.getText();
        if(buscar.isEmpty() || buscar.equals(" ")) {
            Txt_Buscar.setText("");
            Txt_Buscar.requestFocus();
            JOptionPane.showMessageDialog(this, "Ingrese un id para poder realizar la busqueda.");
        } else {
            
            try {
                
                Double.parseDouble(buscar);
                
            } catch (NumberFormatException e) {
                Txt_Buscar.setText("");
                Txt_Buscar.requestFocus();
                JOptionPane.showMessageDialog(this, "Lo que ha digitado no es una id valida.");
            }
            CuerpoDeAgua cuerpoAgua= new CuerpoDeAgua();

            //conectar a la base de datos
            Connection con= Conexion.Conectar();

            // consultar base de datos
            String sql="SELECT * FROM cuerpos_de_agua WHERE id=?";
            ResultSet Rs_Buscar;

            try {
                PreparedStatement ps=con.prepareStatement(sql);
                // ps me crea una sentencia preparada
                ps.setInt(1, Integer.parseInt(Txt_Buscar.getText().strip()));
                // ejecuta la consulta
                Rs_Buscar=ps.executeQuery();

                // si, si existe un resultado de la consulta
                if(Rs_Buscar.next()){
                    cuerpoAgua.setNombreCuerpoDeAgua(Rs_Buscar.getString("nombre"));
                    cuerpoAgua.setIdCuerpoDeAgua(Rs_Buscar.getInt("id"));
                    cuerpoAgua.setMunicipio(Rs_Buscar.getString("municipio"));
                    cuerpoAgua.setTipoCuerpoDeAgua(Rs_Buscar.getString("tipo_cuerpo"));
                    cuerpoAgua.setTipoDeAgua(Rs_Buscar.getString("tipo_agua"));
                    cuerpoAgua.setIRCA(Rs_Buscar.getDouble("irca"));

                    //hacemos visible
                    Lbl_Resultados.setVisible(true);
                    Lbl_NombreEE.setVisible(true);
                    Lbl_IDEE.setVisible(true);
                    Lbl_MunicipioEE.setVisible(true);
                    Lbl_TipoCuerpoEE.setVisible(true);
                    Lbl_TipoAguaEE.setVisible(true);
                    Lbl_IRCAEE.setVisible(true);
                    Btn_Editar.setVisible(true);
                    Btn_Eliminar.setVisible(true);
                    Btn_Cancelar.setVisible(true);
                    Txt_NombreEE.setVisible(true);
                    Txt_IDEE.setVisible(true);
                    Txt_MunicipioEE.setVisible(true);
                    Txt_TipoCuerpoEE.setVisible(true);
                    Txt_TipoAguaEE.setVisible(true);
                    Txt_IRCAEE.setVisible(true);

                    Txt_NombreEE.setText(cuerpoAgua.getNombreCuerpoDeAgua());
                    Txt_IDEE.setText(String.valueOf(cuerpoAgua.getIdCuerpoDeAgua()));
                    Txt_MunicipioEE.setText(cuerpoAgua.getMunicipio());
                    Txt_TipoCuerpoEE.setText(cuerpoAgua.getTipoCuerpoDeAgua());
                    Txt_TipoAguaEE.setText(cuerpoAgua.getTipoDeAgua());
                    Txt_IRCAEE.setText(String.valueOf(cuerpoAgua.getIRCA()));

                } else {
                    Txt_NombreEE.setText("");
                    Txt_IDEE.setText("");
                    Txt_MunicipioEE.setText("");
                    Txt_TipoCuerpoEE.setText("");
                    Txt_TipoAguaEE.setText("");
                    Txt_IRCAEE.setText("");
                    Txt_Buscar.setText("");
                    
                    Lbl_Resultados.setVisible(false);
                    Lbl_NombreEE.setVisible(false);
                    Lbl_IDEE.setVisible(false);
                    Lbl_MunicipioEE.setVisible(false);
                    Lbl_TipoCuerpoEE.setVisible(false);
                    Lbl_TipoAguaEE.setVisible(false);
                    Lbl_IRCAEE.setVisible(false);
                    Btn_Editar.setVisible(false);
                    Btn_Eliminar.setVisible(false);
                    Btn_Cancelar.setVisible(false);
                    Txt_NombreEE.setVisible(false);
                    Txt_IDEE.setVisible(false);
                    Txt_MunicipioEE.setVisible(false);
                    Txt_TipoCuerpoEE.setVisible(false);
                    Txt_TipoAguaEE.setVisible(false);
                    Txt_IRCAEE.setVisible(false);
                    Txt_Buscar.requestFocus();
                    JOptionPane.showMessageDialog(this, "El registro que busca no existe.");

                }

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_Btn_BuscarEEActionPerformed

    private void Btn_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_EditarActionPerformed
        // TODO add your handling code here:
        String numerico_IRCA=Txt_IRCAEE.getText();
        try {
                Double.parseDouble(numerico_IRCA);

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,"No puede continuar hasta no"+
                        " ingresar un IRCA que sea valido");
            }
        CuerpoDeAgua cuerpoAgua=new CuerpoDeAgua();
        cuerpoAgua.setNombreCuerpoDeAgua(Txt_NombreEE.getText());
        cuerpoAgua.setIdCuerpoDeAgua(Integer.parseInt(Txt_IDEE.getText()));
        cuerpoAgua.setMunicipio(Txt_MunicipioEE.getText());
        cuerpoAgua.setTipoCuerpoDeAgua(Txt_TipoCuerpoEE.getText());
        cuerpoAgua.setTipoDeAgua(Txt_TipoAguaEE.getText());
        cuerpoAgua.setIRCA(Double.parseDouble(Txt_IRCAEE.getText()));
        
        Connection con= Conexion.Conectar();
        
        //insertar a la base de datos
        String sql="UPDATE cuerpos_de_agua SET nombre=?, municipio=?, tipo_cuerpo=?, tipo_agua=?, irca=? WHERE "
                + "id=?";
        try {
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setString(1, cuerpoAgua.getNombreCuerpoDeAgua());
            ps.setString(2, cuerpoAgua.getMunicipio());
            ps.setString(3, cuerpoAgua.getTipoCuerpoDeAgua());
            ps.setString(4, cuerpoAgua.getTipoDeAgua());
            ps.setDouble(5, cuerpoAgua.getIRCA());
            ps.setInt(6, cuerpoAgua.getIdCuerpoDeAgua());
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "El cuerpo de agua con id "
                    +cuerpoAgua.getIdCuerpoDeAgua()+" ha sido actualizado.");
            
            Txt_NombreEE.setText("");
            Txt_IDEE.setText("");
            Txt_MunicipioEE.setText("");
            Txt_TipoCuerpoEE.setText("");
            Txt_TipoAguaEE.setText("");
            Txt_IRCAEE.setText("");
            Txt_Buscar.setText("");
                    
            Lbl_Resultados.setVisible(false);
            Lbl_NombreEE.setVisible(false);
            Lbl_IDEE.setVisible(false);
            Lbl_MunicipioEE.setVisible(false);
            Lbl_TipoCuerpoEE.setVisible(false);
            Lbl_TipoAguaEE.setVisible(false);
            Lbl_IRCAEE.setVisible(false);
            Btn_Editar.setVisible(false);
            Btn_Eliminar.setVisible(false);
            Btn_Cancelar.setVisible(false);
            Txt_NombreEE.setVisible(false);
            Txt_IDEE.setVisible(false);
            Txt_MunicipioEE.setVisible(false);
            Txt_TipoCuerpoEE.setVisible(false);
            Txt_TipoAguaEE.setVisible(false);
            Txt_IRCAEE.setVisible(false);
            Txt_Buscar.requestFocus();
            listadoDP();
            
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Btn_EditarActionPerformed

    private void Btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_EliminarActionPerformed
        // TODO add your handling code here:
        CuerpoDeAgua cuerpoAgua=new CuerpoDeAgua();
        cuerpoAgua.setIdCuerpoDeAgua(Integer.parseInt(Txt_IDEE.getText()));
        
        Connection con= Conexion.Conectar();
        
        //insertar a la base de datos
        String sql="DELETE FROM cuerpos_de_agua WHERE id=?";
        try {
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setInt(1, cuerpoAgua.getIdCuerpoDeAgua());
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "El cuerpo de agua ha sido eliminado.");
            
            Txt_NombreEE.setText("");
            Txt_IDEE.setText("");
            Txt_MunicipioEE.setText("");
            Txt_TipoCuerpoEE.setText("");
            Txt_TipoAguaEE.setText("");
            Txt_IRCAEE.setText("");
            Txt_Buscar.setText("");
                    
            Lbl_Resultados.setVisible(false);
            Lbl_NombreEE.setVisible(false);
            Lbl_IDEE.setVisible(false);
            Lbl_MunicipioEE.setVisible(false);
            Lbl_TipoCuerpoEE.setVisible(false);
            Lbl_TipoAguaEE.setVisible(false);
            Lbl_IRCAEE.setVisible(false);
            Btn_Editar.setVisible(false);
            Btn_Eliminar.setVisible(false);
            Btn_Cancelar.setVisible(false);
            Txt_NombreEE.setVisible(false);
            Txt_IDEE.setVisible(false);
            Txt_MunicipioEE.setVisible(false);
            Txt_TipoCuerpoEE.setVisible(false);
            Txt_TipoAguaEE.setVisible(false);
            Txt_IRCAEE.setVisible(false);
            Txt_Buscar.requestFocus();
            listadoDP();
            
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Btn_EliminarActionPerformed

    private void Btn_ObtenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ObtenerActionPerformed
        // TODO add your handling code here:
        
        // limpiar para evitar datos repetidos
        Txta_Obtener.setText("");
        ContarRegistros=0;
        
        //conectar a la base de datos
        Connection con= Conexion.Conectar();
        
        // consultar base de datos
        String sql="SELECT * FROM cuerpos_de_agua";
        ResultSet Rs_Listar;
        
        // creamos un array list para poder generar un vector gigante
        ArrayList<CuerpoDeAgua> cuerpoAguaTemp= new ArrayList<>();
        
        
        
        try {
            PreparedStatement ps=con.prepareStatement(sql);
            // ejecuta la consulta
            Rs_Listar=ps.executeQuery();
            
            
            // si, si existe un resultado de la consulta se ejecuta el while
            while(Rs_Listar.next()){
                CuerpoDeAgua cuerpoAgua=new CuerpoDeAgua();

                cuerpoAgua.setNombreCuerpoDeAgua(Rs_Listar.getString("nombre"));
                cuerpoAgua.setIdCuerpoDeAgua(Rs_Listar.getInt("id"));
                cuerpoAgua.setMunicipio(Rs_Listar.getString("municipio"));
                cuerpoAgua.setTipoCuerpoDeAgua(Rs_Listar.getString("tipo_cuerpo"));
                cuerpoAgua.setTipoDeAgua(Rs_Listar.getString("tipo_agua"));
                cuerpoAgua.setIRCA(Rs_Listar.getDouble("irca"));
                
                ContarRegistros++;

                cuerpoAguaTemp.add(cuerpoAgua);
            }
            
            
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(ContarRegistros>0){
            for (CuerpoDeAgua cuerpoDeAgua : cuerpoAguaTemp) {

                //Separar con doble espacio para poder generar y traer registros que contienen espcios
                Txta_Obtener.setText(Txta_Obtener.getText()+ cuerpoDeAgua.getNombreCuerpoDeAgua()
                +"  "+cuerpoDeAgua.getIdCuerpoDeAgua()+"  "+cuerpoDeAgua.getMunicipio()
                +"  "+cuerpoDeAgua.getTipoCuerpoDeAgua()+"  "+cuerpoDeAgua.getTipoDeAgua()
                +"  "+cuerpoDeAgua.getIRCA()+"\n");

            }
        } else {
            JOptionPane.showMessageDialog(this, "Aún no existen registros que se puedan obtener");
        }
    }//GEN-LAST:event_Btn_ObtenerActionPerformed

    private void Btn_ProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ProcesarActionPerformed
        // TODO add your handling code here:
        Txta_Procesar.setText("");
        CuerpoDeAgua.setContar(0);
        
        if(ContarRegistros>0){

            // strip devuelve un string con los espacios iniciales y finales eliminados
            String MsgSalida=Txta_Obtener.getText().strip();
            // separo cada linea
            String VectorSalida[]=MsgSalida.split("\n");
            CuerpoDeAgua VectorProcesos[]= new CuerpoDeAgua[VectorSalida.length];

            for (int i = 0; i < VectorSalida.length; i++) {
                // separo el contenido de cada linea
                //String corrector=VectorSalida[i].strip();
                String Temp []=VectorSalida[i].split("  ");

                //String TipoCuerpoDeAgua, String TipoDeAgua, double IRCA,
                //String NivelDeRiesgo, String NombreCuerpoDeAgua, int IdCuerpoDeAgua, String Municipio
                VectorProcesos[i]=new CuerpoDeAgua(Temp[0],Integer.parseInt(Temp[1]),
                Temp[2], Temp[3], Temp[4], Double.parseDouble(Temp[5]));
                //Nombre	Id cuerpo de agua	Municipio	Tipo cuerpo de agua	Tipo de agua	IRCA
            }

            String nivel;

            for (int i = 0; i < VectorSalida.length; i++) {
                nivel=VectorProcesos[i].nivel();

                Txta_Procesar.setText(Txta_Procesar.getText()+nivel+"\n");
            }

            Txta_Procesar.setText(Txta_Procesar.getText()+CuerpoDeAgua.getContar()+"0\n");

            String nn="";
            int c=0;
            for (int i = 0; i < VectorSalida.length; i++) {


                if(VectorProcesos[i].getIRCA()>14 && VectorProcesos[i].getIRCA()<=35){
                    nn+=VectorProcesos[i].getNombreCuerpoDeAgua()+"   ";
                    c++;
                    //System.out.println(nn);

                }


            }

            if(c==0){
                Txta_Procesar.setText(Txta_Procesar.getText()+"NA\n");
            } else{
                Txta_Procesar.setText(Txta_Procesar.getText()+nn.strip()+"\n");
            }

            double Menor= 1000000000;
            String Name_Menor="";
            int Id_Menor=0;

            for (int i = 0; i < VectorSalida.length; i++) {

                if(VectorProcesos[i].getIRCA()<Menor){
                    Menor=VectorProcesos[i].getIRCA();
                    Name_Menor=VectorProcesos[i].getNombreCuerpoDeAgua();
                    Id_Menor=VectorProcesos[i].getIdCuerpoDeAgua();

                }

            }

            Txta_Procesar.setText(Txta_Procesar.getText()+Name_Menor+" "+Id_Menor+".0\n");
            
        } else {
            JOptionPane.showMessageDialog(this, "No es posible procesar sin registros");
        }
        
    }//GEN-LAST:event_Btn_ProcesarActionPerformed

    private void Btn_LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_LimpiarActionPerformed
        // TODO add your handling code here:
        String Obtener=Txta_Obtener.getText();
        String Procesar=Txta_Procesar.getText();
        if(Obtener.isEmpty() && Procesar.isEmpty()){
            JOptionPane.showMessageDialog(this, "Los campos ya estan limpios.");
        } else {
            Txta_Obtener.setText("");
            Txta_Procesar.setText("");
            ContarRegistros=0;
        }
    }//GEN-LAST:event_Btn_LimpiarActionPerformed

    private void Btn_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CancelarActionPerformed
        // TODO add your handling code here:
        Txt_NombreEE.setText("");
        Txt_IDEE.setText("");
        Txt_MunicipioEE.setText("");
        Txt_TipoCuerpoEE.setText("");
        Txt_TipoAguaEE.setText("");
        Txt_IRCAEE.setText("");
        Txt_Buscar.setText("");

        Lbl_Resultados.setVisible(false);
        Lbl_NombreEE.setVisible(false);
        Lbl_IDEE.setVisible(false);
        Lbl_MunicipioEE.setVisible(false);
        Lbl_TipoCuerpoEE.setVisible(false);
        Lbl_TipoAguaEE.setVisible(false);
        Lbl_IRCAEE.setVisible(false);
        Btn_Editar.setVisible(false);
        Btn_Eliminar.setVisible(false);
        Btn_Cancelar.setVisible(false);
        Txt_NombreEE.setVisible(false);
        Txt_IDEE.setVisible(false);
        Txt_MunicipioEE.setVisible(false);
        Txt_TipoCuerpoEE.setVisible(false);
        Txt_TipoAguaEE.setVisible(false);
        Txt_IRCAEE.setVisible(false);
        Txt_Buscar.requestFocus();
    }//GEN-LAST:event_Btn_CancelarActionPerformed

    private void Txta_ListaRegistrosDPComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_Txta_ListaRegistrosDPComponentAdded
        // TODO add your handling code here:
        Txta_ListaRegistrosDP.append("Listo");
    }//GEN-LAST:event_Txta_ListaRegistrosDPComponentAdded

    private void Txt_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_IDActionPerformed

    private void Txt_BuscarDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_BuscarDPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_BuscarDPActionPerformed

    private void Txt_BuscarDPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Txt_BuscarDPFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Txt_BuscarDPFocusGained

    private void Panel_DPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Panel_DPFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_Panel_DPFocusGained

    private void Btn_BuscarDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_BuscarDPActionPerformed
        // TODO add your handling code here:
        
        Lbl_Msg.setVisible(false);
        Lbl_HabitantesDP.setVisible(false);
        Lbl_IDDP.setVisible(false);
        Btn_EditarDP.setVisible(false);
        Btn_RegistrarDP.setVisible(false);
        Btn_CancelarDP.setVisible(false);
        Txt_HabitantesDP.setVisible(false);
        Txt_IDDP.setVisible(false);
        Lbl_Msg.setText("");
        Txt_HabitantesDP.setText("");
        Txt_IDDP.setText("");
        Txt_BuscarDP.requestFocus();

        listadoDP();
        String buscar=Txt_BuscarDP.getText();
        if(buscar.isEmpty() || buscar.equals(" ")) {
            Txt_BuscarDP.setText("");
            Txt_BuscarDP.requestFocus();
            JOptionPane.showMessageDialog(this, "Ingrese un id para poder realizar la busqueda.");
        } else {
            
            try {
                
                Double.parseDouble(buscar);
                
            } catch (NumberFormatException e) {
                Txt_BuscarDP.setText("");
                Txt_BuscarDP.requestFocus();
                JOptionPane.showMessageDialog(this, "Lo que ha digitado no es una id valida.");
            }
            DensidadPoblacional densidadPoblacional= new DensidadPoblacional();

            //conectar a la base de datos
            Connection con= Conexion.Conectar();

            // consultar base de datos
            String sql="SELECT * FROM registro_afectacion WHERE id_cuerpo_agua=?";
            ResultSet Rs_BuscarDP;

            try {
                PreparedStatement ps=con.prepareStatement(sql);
                // ps me crea una sentencia preparada
                ps.setInt(1, Integer.parseInt(Txt_BuscarDP.getText().strip()));
                // ejecuta la consulta
                Rs_BuscarDP=ps.executeQuery();

                // si, si existe un resultado de la consulta
                if(Rs_BuscarDP.next()){
                    densidadPoblacional.setIdCuerpoDeAgua(Rs_BuscarDP.getInt("id_cuerpo_agua"));
                    densidadPoblacional.setHabitantes(Integer.parseInt(Rs_BuscarDP.getString("habitantes")));

                    //hacemos visible
                    Lbl_Msg.setVisible(true);
                    Lbl_HabitantesDP.setVisible(true);
                    Lbl_IDDP.setVisible(true);
                    Btn_CancelarDP.setVisible(true);
                    Btn_EditarDP.setVisible(true);
                    Txt_HabitantesDP.setVisible(true);
                    Txt_IDDP.setVisible(true);
                    Txt_IDDP.setText(String.valueOf(densidadPoblacional.getIdCuerpoDeAgua()));
                    Txt_HabitantesDP.setText(String.valueOf(densidadPoblacional.getHabitantes()));
                    Lbl_Msg.setText("El id que busca ya esta registrado, puede actualizar la información.");

                } else {
                    
                    // evaluamos la busqueda en la tabla de cuerpos de agua para
                    // verificar existencia del id
                    
                    
                    CuerpoDeAgua cuerpoAgua= new CuerpoDeAgua();

                    //conectar a la base de datos
                    Connection conCuerpos= Conexion.Conectar();

                    // consultar base de datos
                    String sqlCuerpos="SELECT * FROM cuerpos_de_agua WHERE id=?";
                    ResultSet Rs_BuscarCuerpos;

                    try {
                        PreparedStatement psCuerpos=conCuerpos.prepareStatement(sqlCuerpos);
                        // ps me crea una sentencia preparada
                        psCuerpos.setInt(1, Integer.parseInt(Txt_BuscarDP.getText().strip()));
                        // ejecuta la consulta
                        Rs_BuscarCuerpos=psCuerpos.executeQuery();

                        // si, si existe un resultado de la consulta
                        if(Rs_BuscarCuerpos.next()){
                            cuerpoAgua.setIdCuerpoDeAgua(Rs_BuscarCuerpos.getInt("id"));

                            
                    
                            //hacemos visible
                            Lbl_Msg.setVisible(true);
                            Lbl_HabitantesDP.setVisible(true);
                            Lbl_IDDP.setVisible(true);
                            Btn_RegistrarDP.setVisible(true);
                            Btn_CancelarDP.setVisible(true);
                            Txt_HabitantesDP.setVisible(true);
                            Txt_IDDP.setVisible(true);
                            Txt_IDDP.setText(String.valueOf(cuerpoAgua.getIdCuerpoDeAgua()));
                            Lbl_Msg.setText("El cuerpo de agua que busca aun no tiene habitantes asociados.");

                        } else {
                            Lbl_Msg.setVisible(false);
                            Lbl_HabitantesDP.setVisible(false);
                            Lbl_IDDP.setVisible(false);
                            Btn_EditarDP.setVisible(false);
                            Btn_RegistrarDP.setVisible(false);
                            Btn_CancelarDP.setVisible(false);
                            Txt_HabitantesDP.setVisible(false);
                            Txt_IDDP.setVisible(false);
                            Lbl_Msg.setText("");
                            Txt_HabitantesDP.setText("");
                            Txt_IDDP.setText("");
                            Txt_BuscarDP.requestFocus();
                            Txt_BuscarDP.setText("");

                            listadoDP(); //evitar errores
                            JOptionPane.showMessageDialog(this, "El registro que busca no existe.");

                        }

                    } catch (SQLException e) {
                        System.out.println(e.getMessage());
                    }
                    try {
                        conCuerpos.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    
                    
                }

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        
    }//GEN-LAST:event_Btn_BuscarDPActionPerformed

    private void Btn_RegistrarDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegistrarDPActionPerformed
        // TODO add your handling code here:
        //Registramos los habitantes
        String numerico_id= Txt_IDDP.getText();
        String numerico_Habitantes=Txt_HabitantesDP.getText();


        if(numerico_id.equals(" ")||numerico_id.isEmpty()||numerico_Habitantes.equals(" ")
                ||numerico_Habitantes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se permiten campos vacios.");

        } else {
            try {
                Double.parseDouble(numerico_id);

            } catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this,"No puede continuar hasta no"+
                        " ingresar un id que sea valido");
            }

            try {
                Double.parseDouble(numerico_Habitantes);

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,"No puede continuar hasta no"+
                        " ingresar una cantidad de habitantes que sea valida");
            }


            DensidadPoblacional densidadPoblacional= new DensidadPoblacional();


            
            densidadPoblacional.setIdCuerpoDeAgua(Integer.parseInt(Txt_IDDP.getText().strip()));
            densidadPoblacional.setHabitantes(Integer.parseInt(Txt_HabitantesDP.getText().strip()));

            Connection con= Conexion.Conectar();

            //insertar a la base de datos
            String sql="INSERT INTO registro_afectacion (id_cuerpo_agua, habitantes) VALUES "
                    + "(?, ?)";
            try {
                PreparedStatement ps=con.prepareStatement(sql);
                ps.setInt(1, densidadPoblacional.getIdCuerpoDeAgua());
                ps.setInt(2, densidadPoblacional.getHabitantes());

                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Registro de habitantes guardado.");

                Lbl_Msg.setVisible(false);
                Lbl_HabitantesDP.setVisible(false);
                Lbl_IDDP.setVisible(false);
                Btn_EditarDP.setVisible(false);
                Btn_RegistrarDP.setVisible(false);
                Btn_CancelarDP.setVisible(false);
                Txt_HabitantesDP.setVisible(false);
                Txt_IDDP.setVisible(false);
                Lbl_Msg.setText("");
                Txt_HabitantesDP.setText("");
                Txt_IDDP.setText("");
                Txt_BuscarDP.requestFocus();
                Txt_BuscarDP.setText("");
        
                listadoDP();


            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        //--------registramos los habitantes-------
    }//GEN-LAST:event_Btn_RegistrarDPActionPerformed

    private void Btn_EditarDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_EditarDPActionPerformed
        // TODO add your handling code here:
        
        //----- Editar registros de habitantes-----
        
         String numerico_Habitantes=Txt_HabitantesDP.getText();
        try {
                Double.parseDouble(numerico_Habitantes);

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,"No puede continuar hasta no"+
                        " ingresar una cantidd de habitantes que sea valida");
            }
        DensidadPoblacional densidadPoblacional= new DensidadPoblacional();
        densidadPoblacional.setIdCuerpoDeAgua(Integer.parseInt(Txt_IDDP.getText()));
        densidadPoblacional.setHabitantes(Integer.parseInt(Txt_HabitantesDP.getText()));
        
        Connection con= Conexion.Conectar();
        
        //insertar a la base de datos
        String sql="UPDATE registro_afectacion SET habitantes=? WHERE  id_cuerpo_agua=?";
        try {
            PreparedStatement ps=con.prepareStatement(sql);
            ps.setInt(1, densidadPoblacional.getHabitantes());
            ps.setInt(2, densidadPoblacional.getIdCuerpoDeAgua());
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "El cuerpo de agua con id "
                    +densidadPoblacional.getIdCuerpoDeAgua()+" ha sido actualizado.");
            
            Lbl_Msg.setVisible(false);
            Lbl_HabitantesDP.setVisible(false);
            Lbl_IDDP.setVisible(false);
            Btn_EditarDP.setVisible(false);
            Btn_RegistrarDP.setVisible(false);
            Btn_CancelarDP.setVisible(false);
            Txt_HabitantesDP.setVisible(false);
            Txt_IDDP.setVisible(false);
            Lbl_Msg.setText("");
            Txt_HabitantesDP.setText("");
            Txt_IDDP.setText("");
            Txt_BuscarDP.requestFocus();
            Txt_BuscarDP.setText("");

            listadoDP();
            
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
        }
        //------editar registros de habitantes-----
        
        
    }//GEN-LAST:event_Btn_EditarDPActionPerformed

    private void Btn_CancelarDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CancelarDPActionPerformed
        // TODO add your handling code here:
        Lbl_Msg.setVisible(false);
        Lbl_HabitantesDP.setVisible(false);
        Lbl_IDDP.setVisible(false);
        Btn_EditarDP.setVisible(false);
        Btn_RegistrarDP.setVisible(false);
        Btn_CancelarDP.setVisible(false);
        Txt_HabitantesDP.setVisible(false);
        Txt_IDDP.setVisible(false);
        Lbl_Msg.setText("");
        Txt_HabitantesDP.setText("");
        Txt_IDDP.setText("");
        Txt_BuscarDP.requestFocus();
        Txt_BuscarDP.setText("");

        listadoDP();
    }//GEN-LAST:event_Btn_CancelarDPActionPerformed

    private void Btn_GeneralDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_GeneralDPActionPerformed
        // TODO add your handling code here:
        Txta_AfectacionDP.setText("");
        Txta_AfectacionDP.setVisible(true);
        
        Lbl_AfectacionPorIDDP.setVisible(false);
        Lbl_registroPorIDDP.setVisible(false);
        Btn_CalcularPorIDDP.setVisible(false);
        Lbl_IDPorIDDP.setVisible(false);
        Txt_IDPorIDDP.setVisible(false);
        Lbl_AfectacionPorIDDP.setText("");
        Lbl_registroPorIDDP.setText("");
        
        //conectar a la base de datos
        Connection con= Conexion.Conectar();
        
        // consultar base de datos
        String sql="SELECT cuerpos_de_agua.nombre, cuerpos_de_agua.id, cuerpos_de_agua.municipio, "
                + "registro_afectacion.id_cuerpo_agua, registro_afectacion.habitantes "
                + "FROM cuerpos_de_agua, registro_afectacion "
                + "WHERE cuerpos_de_agua.id = registro_afectacion.id_cuerpo_agua";
        ResultSet Rs_Listar;
        
        // creamos un array list para poder generar un vector gigante
        ArrayList<CuerpoDeAgua> cuerpoAguaTemp= new ArrayList<>();
        ArrayList<DensidadPoblacional> densidadPoblacionalTemp=new ArrayList<>();
        
        int contador_Afectacion=0;
        
        try {
            PreparedStatement ps=con.prepareStatement(sql);
            // ejecuta la consulta
            Rs_Listar=ps.executeQuery();
            
            
            // si, si existe un resultado de la consulta se ejecuta el while
            while(Rs_Listar.next()){
                CuerpoDeAgua cuerpoAgua=new CuerpoDeAgua();
                DensidadPoblacional densidadP= new DensidadPoblacional();

                cuerpoAgua.setNombreCuerpoDeAgua(Rs_Listar.getString("nombre"));
                cuerpoAgua.setIdCuerpoDeAgua(Rs_Listar.getInt("id"));
                cuerpoAgua.setMunicipio(Rs_Listar.getString("municipio"));
                densidadP.setIdCuerpoDeAgua(Rs_Listar.getInt("id_cuerpo_agua"));
                densidadP.setHabitantes(Rs_Listar.getInt("habitantes"));
                
                contador_Afectacion++;

                cuerpoAguaTemp.add(cuerpoAgua);
                densidadPoblacionalTemp.add(densidadP);
            }
            
            
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        if(contador_Afectacion>0){
            
            Txta_AfectacionDP.setText("ID - municipio, nombre / habitantes\n Afectación: n \n\n");
            for (CuerpoDeAgua cuerpoDeAgua : cuerpoAguaTemp) {
                
                Txta_AfectacionDP.setText(Txta_AfectacionDP.getText()+ cuerpoDeAgua.getIdCuerpoDeAgua()
                +" - "+cuerpoDeAgua.getMunicipio()+", "+cuerpoDeAgua.getNombreCuerpoDeAgua()+" / ");
                
                for (DensidadPoblacional densidadPoblacional : densidadPoblacionalTemp) {
                    
                    if(densidadPoblacional.getIdCuerpoDeAgua()==cuerpoDeAgua.getIdCuerpoDeAgua()){
                        Txta_AfectacionDP.setText(Txta_AfectacionDP.getText()+ densidadPoblacional.getHabitantes()+"\n"
                        +"Afectación: "+densidadPoblacional.afectacion()+"\n\n");
                        
                    }
                
                }

            }
            
            
        } else {
            Txta_AfectacionDP.setText("Aún no existen registros que se puedan Mostrar");
        }
    }//GEN-LAST:event_Btn_GeneralDPActionPerformed

    private void Txt_IDPorIDDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_IDPorIDDPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_IDPorIDDPActionPerformed

    private void Btn_CalcularPorIDDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CalcularPorIDDPActionPerformed
        // TODO add your handling code here:
        
        Lbl_AfectacionPorIDDP.setVisible(true);
        Lbl_registroPorIDDP.setVisible(true);
        
        String buscar=Txt_IDPorIDDP.getText();
        if(buscar.isEmpty() || buscar.equals(" ")) {
            Txt_IDPorIDDP.setText("");
            Txt_IDPorIDDP.requestFocus();
            JOptionPane.showMessageDialog(this, "Ingrese un id para poder realizar la busqueda.");
        } else {
            
            try {
                
                Double.parseDouble(buscar);
                
            } catch (NumberFormatException e) {
                Txt_IDPorIDDP.setText("");
                Txt_IDPorIDDP.requestFocus();
                JOptionPane.showMessageDialog(this, "Lo que ha digitado no es una id valida.");
            }
            CuerpoDeAgua cuerpoAgua=new CuerpoDeAgua();
            DensidadPoblacional densidadPoblacional= new DensidadPoblacional();

            //conectar a la base de datos
            Connection con= Conexion.Conectar();

            // consultar base de datos
            String sql="SELECT cuerpos_de_agua.nombre, cuerpos_de_agua.id, cuerpos_de_agua.municipio, "
                + "registro_afectacion.id_cuerpo_agua, registro_afectacion.habitantes "
                + "FROM cuerpos_de_agua, registro_afectacion "
                + "WHERE cuerpos_de_agua.id=? AND cuerpos_de_agua.id = registro_afectacion.id_cuerpo_agua";
            ResultSet Rs_Buscar;

            try {
                PreparedStatement ps=con.prepareStatement(sql);
                // ps me crea una sentencia preparada
                ps.setInt(1, Integer.parseInt(Txt_IDPorIDDP.getText().strip()));
                // ejecuta la consulta
                Rs_Buscar=ps.executeQuery();

                // si, si existe un resultado de la consulta
                if(Rs_Buscar.next()){
                     

                    cuerpoAgua.setNombreCuerpoDeAgua(Rs_Buscar.getString("nombre"));
                    cuerpoAgua.setIdCuerpoDeAgua(Rs_Buscar.getInt("id"));
                    cuerpoAgua.setMunicipio(Rs_Buscar.getString("municipio"));
                    densidadPoblacional.setIdCuerpoDeAgua(Rs_Buscar.getInt("id_cuerpo_agua"));
                    densidadPoblacional.setHabitantes(Rs_Buscar.getInt("habitantes"));

                    //hacemos visible
                    Lbl_registroPorIDDP.setText(cuerpoAgua.getIdCuerpoDeAgua()
                    +" - "+cuerpoAgua.getMunicipio()+", "+cuerpoAgua.getNombreCuerpoDeAgua()+" / Habitantes: "
                    + densidadPoblacional.getHabitantes()+"\n");
                    Lbl_AfectacionPorIDDP.setText("Afectación: "+densidadPoblacional.afectacion()+"\n\n");
                    // color en los label de acuerdo al nivel de afectación

                } else {
                    
                    Lbl_AfectacionPorIDDP.setVisible(false);
                    Lbl_registroPorIDDP.setVisible(false);
                    Lbl_IDPorIDDP.setVisible(false);
                    Lbl_AfectacionPorIDDP.setText("");
                    Lbl_registroPorIDDP.setText("");
                    Txt_IDPorIDDP.setText("");
                    Txt_IDPorIDDP.requestFocus();
                    JOptionPane.showMessageDialog(this, "El ID que busca no existe o aun no se le han asociado habitantes al cuerpo de agua.");

                }

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        
    }//GEN-LAST:event_Btn_CalcularPorIDDPActionPerformed

    private void Btn_PorIDDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_PorIDDPActionPerformed
        // TODO add your handling code here:
        
        Txta_AfectacionDP.setText("");
        Txta_AfectacionDP.setVisible(false);
        
        Btn_CalcularPorIDDP.setVisible(true);
        Lbl_IDPorIDDP.setVisible(true);
        Txt_IDPorIDDP.setVisible(true);
        Txt_IDPorIDDP.setText("");
        
    }//GEN-LAST:event_Btn_PorIDDPActionPerformed
    
    private void listadoDP(){
        
        Txta_ListaRegistrosDP.setText("");
        //LLENAR DE ARRANQUE LA LISTA DE REGISTROS EN Densidad poblacional
        
        //conectar a la base de datos
        Connection con= Conexion.Conectar();
        
        // consultar base de datos
        String sql="SELECT * FROM cuerpos_de_agua";
        ResultSet Rs_Listar;
        
        // creamos un array list para poder generar un vector gigante
        ArrayList<CuerpoDeAgua> cuerpoAguaTemp= new ArrayList<>();
        
        int contador_ListarRegistrosDP=0;
        
        try {
            PreparedStatement ps=con.prepareStatement(sql);
            // ejecuta la consulta
            Rs_Listar=ps.executeQuery();
            
            
            // si, si existe un resultado de la consulta se ejecuta el while
            while(Rs_Listar.next()){
                CuerpoDeAgua cuerpoAgua=new CuerpoDeAgua();

                cuerpoAgua.setNombreCuerpoDeAgua(Rs_Listar.getString("nombre"));
                cuerpoAgua.setIdCuerpoDeAgua(Rs_Listar.getInt("id"));
                cuerpoAgua.setMunicipio(Rs_Listar.getString("municipio"));
                
                contador_ListarRegistrosDP++;

                cuerpoAguaTemp.add(cuerpoAgua);
            }
            
            
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
        try {
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Aplicativo_IRCA.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(contador_ListarRegistrosDP>0){
            for (CuerpoDeAgua cuerpoDeAgua : cuerpoAguaTemp) {
                
                Txta_ListaRegistrosDP.setText(Txta_ListaRegistrosDP.getText()+ cuerpoDeAgua.getIdCuerpoDeAgua()
                +" - "+cuerpoDeAgua.getMunicipio()+", "+cuerpoDeAgua.getNombreCuerpoDeAgua()+"\n");

            }
        } else {
            Txta_ListaRegistrosDP.setText("Aún no existen registros que se puedan Mostrar");
        }
        
        //----------LLENAR DE ARRANQUE LA LISTA DE REGISTROS------ 
    }
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Aplicativo_IRCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Aplicativo_IRCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Aplicativo_IRCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Aplicativo_IRCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Aplicativo_IRCA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_BuscarDP;
    private javax.swing.JButton Btn_BuscarEE;
    private javax.swing.JButton Btn_CalcularPorIDDP;
    private javax.swing.JButton Btn_Cancelar;
    private javax.swing.JButton Btn_CancelarDP;
    private javax.swing.JButton Btn_Editar;
    private javax.swing.JButton Btn_EditarDP;
    private javax.swing.JButton Btn_Eliminar;
    private javax.swing.JButton Btn_GeneralDP;
    private javax.swing.JButton Btn_Guardar;
    private javax.swing.JButton Btn_Limpiar;
    private javax.swing.JButton Btn_Obtener;
    private javax.swing.JButton Btn_PorIDDP;
    private javax.swing.JButton Btn_Procesar;
    private javax.swing.JButton Btn_RegistrarDP;
    private javax.swing.JLabel Lbl_AfectacionPorIDDP;
    private javax.swing.JLabel Lbl_HabitantesDP;
    private javax.swing.JLabel Lbl_IDDP;
    private javax.swing.JLabel Lbl_IDEE;
    private javax.swing.JLabel Lbl_IDPorIDDP;
    private javax.swing.JLabel Lbl_IRCAEE;
    private javax.swing.JLabel Lbl_Msg;
    private javax.swing.JLabel Lbl_MunicipioEE;
    private javax.swing.JLabel Lbl_NombreEE;
    private javax.swing.JLabel Lbl_Resultados;
    private javax.swing.JLabel Lbl_TipoAguaEE;
    private javax.swing.JLabel Lbl_TipoCuerpoEE;
    private javax.swing.JLabel Lbl_registroPorIDDP;
    private javax.swing.JPanel Panel_DP;
    private javax.swing.JPanel Panel_EE;
    private javax.swing.JPanel Panel_Ingresar;
    private javax.swing.JPanel Panel_PAfectacion;
    private javax.swing.JPanel Panel_PRegistro;
    private javax.swing.JPanel Panel_Procesar;
    private javax.swing.JTabbedPane TP_DP;
    private javax.swing.JTabbedPane TP_Principal;
    private javax.swing.JTextField Txt_Buscar;
    private javax.swing.JTextField Txt_BuscarDP;
    private javax.swing.JTextField Txt_HabitantesDP;
    private javax.swing.JTextField Txt_ID;
    private javax.swing.JTextField Txt_IDDP;
    private javax.swing.JTextField Txt_IDEE;
    private javax.swing.JTextField Txt_IDPorIDDP;
    private javax.swing.JTextField Txt_IRCA;
    private javax.swing.JTextField Txt_IRCAEE;
    private javax.swing.JTextField Txt_Municipio;
    private javax.swing.JTextField Txt_MunicipioEE;
    private javax.swing.JTextField Txt_Nombre;
    private javax.swing.JTextField Txt_NombreEE;
    private javax.swing.JTextField Txt_TipoAgua;
    private javax.swing.JTextField Txt_TipoAguaEE;
    private javax.swing.JTextField Txt_TipoCuerpo;
    private javax.swing.JTextField Txt_TipoCuerpoEE;
    private javax.swing.JTextArea Txta_AfectacionDP;
    private javax.swing.JTextArea Txta_ListaRegistrosDP;
    private javax.swing.JTextArea Txta_Obtener;
    private javax.swing.JTextArea Txta_Procesar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
